steps:
  # STEP 0 - Install dependencies
  - id: installing-dependencies
    name: 'python'
    entrypoint: pip
    args: ["install", "-r", "src/requirements.txt", "--user"]

  # STEP 1 - Safety Check
  - id: safety-check
    name: 'python'
    entrypoint: '/builder/home/.local/bin/safety'
    args: ["check", "-r", "api/requirements.txt"]
    waitFor: ["installing-dependencies"]

  # STEP 2 - Testing API
  - id: run-pytest
    name: 'python'
    entrypoint: '/usr/local/bin/python'
    args: ["-m", "pytest"]
    waitFor: ["installing-dependencies", "safety-check"]

  # STEP 3 - FastAPI
  - id: Build-container-image-API
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      docker build -t gcr.io/$PROJECT_ID/ltm-challenge -f 'build/FastAPI.Dockerfile' .
    waitFor: ["installing-dependencies", "safety-check", "run-pytest"]

  # STEP 4 - PUSH FastAPI
  - id: Push-to-Container-Registry-FastAPI
    name: 'gcr.io/cloud-builders/docker'
    args:
    - push
    - gcr.io/$PROJECT_ID/ltm-challenge
    waitFor: ["installing-dependencies", "safety-check", "run-pytest", "Build-container-image-API"]

  # STEP 5 - DEPLOY CLOUD RUN
  - id: Deploy-Cloud-Run-FastAPI
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
    - run
    - deploy
    - ltm-challenge
    - --image=gcr.io/$PROJECT_ID/ltm-challenge
    - --region=us-central1
    - --port=8000
    - --memory=2Gi
    - --cpu=1
    - --min-instances=1
    - --platform=managed
    waitFor: ["installing-dependencies", "safety-check", "run-pytest", "Build-container-image-API", "Push-to-Container-Registry-FastAPI"]

images:
  - gcr.io/$PROJECT_ID/ltm-challenge
